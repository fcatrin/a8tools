block 1
byte D800
code D806
byte D9B9
dlst D9BC
byte D9C8
dlst D9F0
byte DA0D
code DAC1
byte DC68


label 0014 FRAMECOUNT
label 0034 BLOCK_NUMBER
label 003C FRAME_TIMER
label 003D BUF_INDEX
label 003E BUF_LEN
label 003F EOF_FLAG
label 0080 DST_INDEX
label 0081 DST_SIZE word
label 0083 DST_ADDR word
label 0400 BUFFER

label D808 SET_SCREEN0
label D80C SET_SCREEN
label D81C WAIT_3FRAMES
label D820 WAIT_FRAME
label D921 READ_BYTE
label D92D READ_BLOCK
label D825 START
label DA0D SCREEN_DATA
label DA5D COUNTER 4
label DAC1 NMI
label DAD1 SHADOW_DL
label DAE4 SHADOW_COLOR
label D9BC DLIST_ERROR
label D9C8 ERROR_MSG
label D9F0 DLIST_MAIN
label DC5E SET_VOL_A
label DC60 NEXT_CHANNEL
label DAF1 WAIT_SIO_BIT
label DAFE SIO_BIT_HOLD
label D96E NOT_EOF
label D973 START_GAME
label D986 BOOT_GAME_CODE
label D998 REL_0412
label D9B3 REL_042D
label D9B9 REL_0433
label D8DA DISPLAY_ERROR
label D8F2 WAIT_START_DN
label D8F8 WAIT_START_UP
label D97A COPY_BOOT_CODE
label D95C SET_BLOCK_VARS
label D841 NEXT_CHUNK
label D857 CHUNK_RLE_LONG
label D8AA LOAD_RAW_BYTE
label D8A6 LOAD_RAW_CHUNK 
label D898 UPDATE_DST_ADDR
label D887 CHECK_IS_RAW
label D8BE READ_NEXT_BYTE
label D8BA LOAD_RAW_LONG
label D893 COPY_RLE_SHORT
label D889 LOAD_RLE_SHORT
label D86B NONZ_RLE_LONG
label D86F COPY_RLE_LONG

rem D82A Set Buffer Index at Buffer End to force a block read
rem D808 Set Display List at $D9F0
rem D81C Wait 3 frames
rem D825 This is the Entry Point
rem DC5C Mute all sound
rem D937 This is the numbner 9 to wrap the counter
rem D939 This is used to check if we passed below 0
rem D96B Contains the partial block size
rem D992 This calls the relocated subroutine at REL_0412
rem D995 Looks like a hardcoded execution address per game, skipping standard XEX variables
rem D99C This calls the relocated subroutine at REL_042D
rem D998 Close Channel 0
rem D9B1 Open command
rem D9A7 Buffer at REL_0433
rem D9B9 E:
rem D8DA Motor off
rem D8FE Motor on
rem D973 Motor off
rem D887 Bit 8 = 0 => Raw bytes. Size in A
rem D862 Just skip bytes if data is 0


comment DAC1 Interrupt service routine (set from boot EOF)
comment DAC1 Increments Frame Counter
comment DAC1 Decrements Frame Timer
comment DAC1 Copy shadow values for Display List and Colors
comment DAF1 Wait for bit 1 and then 2 frames with the same bit 
comment D937 Successful read. Decrement block counter on the screen
comment D95C Set EOF flag, buffer length and block read number
comment D986 This code is copied to $400 and it is ran to start the game
comment D9C8 [error] - REBOBINE Y PRESIONE [START]
comment D99F Open channel 0 as E:
comment D8DA Stop tape and display error message

comment D857 RLE long block compression. Size comes as H, L
comment D857 Bit 8 in H = 1
comment D857 Size in Y, A

comment D8A6 Read short block of raw bytes where size < 128
comment D8BA Read long block of raw bytes. Size in Y, A

comment D889 Bit 8 = 1 indicates RLE short block compression
comment D889 bits 6-0 = size
comment D889 Next byte = content


space D825
space D92D
space DB08
space D9B9
space D9BC
space D9F0







